[
  {
    "questionId": 1,
    "questionContent": "CSS 선택자의 종류에 대해 설명해주세요.",
    "answerId": 1111,
    "answerContent": "선택자는 요소를 선택하는 방법을 말합니다. CSS 선택자는 CSS 규칙에 스타일을 적용할 요소를 선택하는 방법을 말합니다. CSS 선택자는 다음과 같이 세 가지 종류로 나눌 수 있습니다. 1. 타입 선택자 2. 클래스 선택자 3. 아이디 선택자",
    "workbookId": 1
  },
  {
    "questionId": 2,
    "questionContent": "JavaScript의 클로저(Closure)에 대해 설명해주세요.",
    "answerId": 2222,
    "answerContent": "클로저는 함수와 함수가 선언된 어휘적 환경의 조합입니다. 클로저를 이해하려면 자바스크립트의 어휘적 환경에 대한 이해가 필요합니다. 자바스크립트에서 함수는 객체입니다. 그리고 함수가 선언될 때, 그 함수의 LexicalEnvironment는 결정됩니다. LexicalEnvironment는 함수가 선언된 어휘적 환경을 의미합니다. 이 환경은 함수가 선언될 당시의 유효 범위 내에 있는 식별자들로 구성됩니다. 이 환경은 함수가 호출될 때, 그대로 함수와 함께 전달됩니다. 이렇게 함수와 그 함수가 선언된 어휘적 환경이 합쳐진 것을 클로저라고 합니다.",
    "workbookId": 1
  },
  {
    "questionId": 3,
    "questionContent": "HTML과 XHTML의 차이점은 무엇인가요?",
    "answerId": 3333,
    "answerContent": "HTML은 SGML(Standard Generalized Markup Language)의 약자이며, 웹 문서를 작성하기 위한 가장 기본적인 마크업 언어입니다. XHTML은 XML(Extensible Markup Language)의 약자이며, HTML을 XML로 재정의한 것입니다. XHTML은 HTML보다 엄격하게 작성되어 있습니다. XHTML은 HTML보다 더 많은 규칙을 가지고 있습니다. XHTML은 HTML보다 더 구조적이고 명확한 작성을 요구합니다.",
    "workbookId": 1
  },
  {
    "questionId": 4,
    "questionContent": "반응형 웹 디자인과 적응형 웹 디자인의 차이점은 무엇인가요?",
    "answerId": 4444,
    "answerContent": "반응형 웹 디자인은 하나의 웹 사이트를 만들고, 그 웹 사이트를 여러 기기에 맞게 최적화하는 것을 의미합니다. 적응형 웹 디자인은 여러 개의 웹 사이트를 만들고, 각 기기에 맞게 웹 사이트를 제공하는 것을 의미합니다.",
    "workbookId": 1
  },
  {
    "questionId": 5,
    "questionContent": "CSS의 박스 모델(Box Model)에 대해 설명해주세요.",
    "answerId": 5555,
    "answerContent": "CSS의 박스 모델은 HTML 요소를 박스로 생각하고, 이 박스를 여러 개의 레이어로 구분한 것입니다. 박스 모델은 다음과 같이 구성됩니다. 1. 콘텐츠(Content) 2. 패딩(Padding) 3. 테두리(Border) 4. 마진(Margin)",
    "workbookId": 2
  },
  {
    "questionId": 6,
    "questionContent": "CSS의 position 속성에 대해 설명해주세요.",
    "answerId": 6666,
    "answerContent": "position 속성은 요소의 위치를 지정하는 속성입니다. position 속성은 다음과 같이 5가지 속성값을 가질 수 있습니다. 1. static 2. relative 3. absolute 4. fixed 5. sticky",
    "workbookId": 2
  },
  {
    "questionId": 7,
    "questionContent": "CSS의 float 속성에 대해 설명해주세요.",
    "answerId": 7777,
    "answerContent": "float 속성은 요소를 좌우 방향으로 띄우는 속성입니다. float 속성은 다음과 같이 3가지 속성값을 가질 수 있습니다. 1. left 2. right 3. none",
    "workbookId": 3
  },
  {
    "questionId": 8,
    "questionContent": "CSS의 flexbox에 대해 설명해주세요.",
    "answerId": 8888,
    "answerContent": "flexbox는 요소의 크기가 불분명하거나 동적인 경우에도, 요소를 정렬하기 위한 방법입니다. flexbox는 다음과 같이 2가지 속성을 가집니다. 1. flex container 2. flex item",
    "workbookId": 4
  },
  {
    "questionId": 9,
    "questionContent": "HTML5의 새로운 기능에 대해 설명해주세요.",
    "answerId": 9999,
    "answerContent": "HTML5는 새로운 구조적 요소, 비디오 및 오디오 요소, 새로운 양식 요소, 캔버스 요소, 드래그 앤 드롭 API, 로컬 스토리지 기능 등을 포함합니다.",
    "workbookId": 5
  },
  {
    "questionId": 10,
    "questionContent": "자바스크립트의 프로미스(Promise)에 대해 설명해주세요.",
    "answerId": 1010,
    "answerContent": "프로미스는 비동기 작업의 완료 또는 실패를 나타내는 객체입니다. 비동기 작업이 성공하면 resolve를, 실패하면 reject를 호출합니다.",
    "workbookId": 6
  },
  {
    "questionId": 11,
    "questionContent": "자바스크립트의 async/await에 대해 설명해주세요.",
    "answerId": 111111,
    "answerContent": "async/await는 프로미스 기반의 비동기 코드를 동기적으로 작성할 수 있게 하는 ES8의 새로운 기능입니다.",
    "workbookId": 6
  },
  {
    "questionId": 12,
    "questionContent": "자바스크립트의 이벤트 루프(Event Loop)에 대해 설명해주세요.",
    "answerId": 121212,
    "answerContent": "이벤트 루프는 자바스크립트의 비동기 동작 원리를 관리합니다. 콜 스택, 이벤트 큐, 백그라운드 작업을 조정하여 비동기 작업을 실행합니다.",
    "workbookId": 7
  },
  {
    "questionId": 13,
    "questionContent": "자바스크립트의 변수 스코프에 대해 설명해주세요.",
    "answerId": 131313,
    "answerContent": "변수 스코프는 변수가 선언된 위치에 따라 그 변수가 유효한 범위를 결정합니다. 자바스크립트에는 전역 스코프와 함수 스코프, 블록 스코프가 있습니다.",
    "workbookId": 8
  },
  {
    "questionId": 14,
    "questionContent": "CSS의 그리드 레이아웃(Grid Layout)에 대해 설명해주세요.",
    "answerId": 141414,
    "answerContent": "그리드 레이아웃은 2차원 레이아웃 시스템으로, 행과 열을 기반으로 요소를 배치합니다.",
    "workbookId": 9
  },
  {
    "questionId": 15,
    "questionContent": "자바스크립트의 객체 지향 프로그래밍에 대해 설명해주세요.",
    "answerId": 151515,
    "answerContent": "자바스크립트의 객체 지향 프로그래밍은 클래스, 상속, 캡슐화, 다형성 등을 포함합니다. ES6 이후 클래스 문법을 도입했습니다.",
    "workbookId": 10
  },
  {
    "questionId": 16,
    "questionContent": "자바스크립트의 프로토타입(Prototype)에 대해 설명해주세요.",
    "answerId": 161616,
    "answerContent": "프로토타입은 자바스크립트에서 객체 상속을 구현하는 메커니즘입니다. 모든 객체는 프로토타입을 가지며 다른 객체의 속성을 상속받을 수 있습니다.",
    "workbookId": 11
  },
  {
    "questionId": 17,
    "questionContent": "웹 애플리케이션의 MVC 패턴에 대해 설명해주세요.",
    "answerId": 171717,
    "answerContent": "MVC 패턴은 모델(Model), 뷰(View), 컨트롤러(Controller)의 세 부분으로 웹 애플리케이션을 구조화하는 디자인 패턴입니다.",
    "workbookId": 11
  },
  {
    "questionId": 18,
    "questionContent": "자바스크립트의 이벤트 위임에 대해 설명해주세요.",
    "answerId": 181818,
    "answerContent": "이벤트 위임은 하위 요소 대신 상위 요소에 이벤트 리스너를 붙여 이벤트를 처리하는 방식입니다. 이를 통해 메모리 사용량을 줄이고 성능을 개선할 수 있습니다.",
    "workbookId": 11
  },
  {
    "questionId": 19,
    "questionContent": "CSS의 미디어 쿼리(Media Query)에 대해 설명해주세요.",
    "answerId": 191919,
    "answerContent": "미디어 쿼리는 다양한 디스플레이 환경에 따라 스타일을 다르게 적용할 수 있게 해주는 CSS 기술입니다.",
    "workbookId": 11
  },
  {
    "questionId": 20,
    "questionContent": "HTML의 시맨틱 태그에 대해 설명해주세요.",
    "answerId": 202020,
    "answerContent": "시맨틱 태그는 웹 페이지의 구조적 의미를 명확히 표현하기 위해 사용되는 HTML 태그입니다. 예: `<article>`, `<section>`, `<nav>`, `<header>`, `<footer>` 등.",
    "workbookId": 13
  },
  {
    "questionId": 21,
    "questionContent": "자바스크립트의 모듈 시스템에 대해 설명해주세요.",
    "answerId": 212121,
    "answerContent": "자바스크립트 모듈 시스템은 코드를 분리하고 재사용하기 위해 ES6에서 도입된 시스템입니다. `import`와 `export` 문을 사용합니다.",
    "workbookId": 14
  },
  {
    "questionId": 22,
    "questionContent": "CSS의 선택자 우선 순위에 대해 설명해주세요.",
    "answerId": 222222,
    "answerContent": "선택자의 우선 순위는 ID 선택자, 클래스 선택자, 태그 선택자의 순서로 결정됩니다. 또한, 인라인 스타일과 `!important` 규칙이 가장 높은 우선순위를 가집니다.",
    "workbookId": 14
  },
  {
    "questionId": 23,
    "questionContent": "자바스크립트의 스코프 체인에 대해 설명해주세요.",
    "answerId": 232323,
    "answerContent": "스코프 체인은 변수가 어디에서 유효한지를 결정하는 메커니즘입니다. 함수 내부에서 선언된 변수는 로컬 스코프를 가지며, 외부 스코프의 변수에 접근할 수 있습니다.",
    "workbookId": 14
  }
]
